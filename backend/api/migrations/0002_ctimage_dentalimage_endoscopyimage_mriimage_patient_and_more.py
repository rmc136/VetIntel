# Generated by Django 5.0.6 on 2025-05-27 00:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CTImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='medical_images/%(class)s/')),
                ('body_part', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('veterinarian_notes', models.TextField(blank=True)),
                ('ai_analysis', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(blank=True, help_text="AI model's confidence score (0-100)", null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('contrast_type', models.CharField(choices=[('NC', 'No Contrast'), ('IV', 'Intravenous'), ('OR', 'Oral'), ('BO', 'Both')], default='NC', max_length=2)),
                ('slice_thickness', models.FloatField(blank=True, help_text='Slice thickness in mm', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('window_setting', models.CharField(blank=True, help_text='e.g., Bone, Soft Tissue, Lung', max_length=50)),
                ('radiation_dose', models.FloatField(blank=True, help_text='Radiation dose in mGy', null=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DentalImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='medical_images/%(class)s/')),
                ('body_part', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('veterinarian_notes', models.TextField(blank=True)),
                ('ai_analysis', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(blank=True, help_text="AI model's confidence score (0-100)", null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('view_type', models.CharField(choices=[('IO', 'Intraoral'), ('EO', 'Extraoral'), ('BW', 'Bitewing'), ('PA', 'Periapical'), ('PAN', 'Panoramic')], max_length=3)),
                ('tooth_number', models.CharField(blank=True, max_length=10)),
                ('quadrant', models.CharField(blank=True, max_length=2)),
                ('kv_used', models.IntegerField(blank=True, help_text='Kilovoltage used', null=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EndoscopyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='medical_images/%(class)s/')),
                ('body_part', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('veterinarian_notes', models.TextField(blank=True)),
                ('ai_analysis', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(blank=True, help_text="AI model's confidence score (0-100)", null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('procedure_type', models.CharField(choices=[('GAS', 'Gastroscopy'), ('COL', 'Colonoscopy'), ('BRO', 'Bronchoscopy'), ('RHI', 'Rhinoscopy'), ('LAR', 'Laryngoscopy'), ('OTH', 'Other')], max_length=3)),
                ('scope_size', models.FloatField(blank=True, help_text='Endoscope diameter in mm', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('biopsy_taken', models.BooleanField(default=False)),
                ('sedation_used', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MRIImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='medical_images/%(class)s/')),
                ('body_part', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('veterinarian_notes', models.TextField(blank=True)),
                ('ai_analysis', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(blank=True, help_text="AI model's confidence score (0-100)", null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('sequence_type', models.CharField(choices=[('T1', 'T1-weighted'), ('T2', 'T2-weighted'), ('FLAIR', 'Fluid-attenuated inversion recovery'), ('DWI', 'Diffusion-weighted imaging'), ('STIR', 'Short tau inversion recovery')], max_length=5)),
                ('slice_thickness', models.FloatField(blank=True, help_text='Slice thickness in mm', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('contrast_used', models.BooleanField(default=False)),
                ('tesla_strength', models.FloatField(blank=True, help_text='MRI machine strength in Tesla', null=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('species', models.CharField(max_length=50)),
                ('breed', models.CharField(blank=True, max_length=50)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('weight', models.FloatField(help_text='Weight in kilograms', validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UltrasoundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='medical_images/%(class)s/')),
                ('body_part', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('veterinarian_notes', models.TextField(blank=True)),
                ('ai_analysis', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(blank=True, help_text="AI model's confidence score (0-100)", null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('scan_type', models.CharField(choices=[('2D', '2D Ultrasound'), ('3D', '3D Ultrasound'), ('4D', '4D Ultrasound'), ('DOP', 'Doppler')], max_length=3)),
                ('frequency', models.FloatField(blank=True, help_text='Frequency in MHz', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('depth', models.FloatField(blank=True, help_text='Scanning depth in cm', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='api.patient')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XRayImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='medical_images/%(class)s/')),
                ('body_part', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('diagnosis', models.TextField(blank=True)),
                ('veterinarian_notes', models.TextField(blank=True)),
                ('ai_analysis', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(blank=True, help_text="AI model's confidence score (0-100)", null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('projection', models.CharField(choices=[('VD', 'Ventrodorsal'), ('DV', 'Dorsoventral'), ('LL', 'Left Lateral'), ('RL', 'Right Lateral'), ('OBL', 'Oblique')], max_length=3)),
                ('kv_used', models.IntegerField(blank=True, help_text='Kilovoltage used', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('ma_used', models.FloatField(blank=True, help_text='Milliamperage used', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='api.patient')),
            ],
            options={
                'verbose_name': 'X-Ray Image',
                'verbose_name_plural': 'X-Ray Images',
            },
        ),
        migrations.DeleteModel(
            name='Diagnosis',
        ),
        migrations.AddField(
            model_name='mriimage',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='api.patient'),
        ),
        migrations.AddField(
            model_name='endoscopyimage',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='api.patient'),
        ),
        migrations.AddField(
            model_name='dentalimage',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='api.patient'),
        ),
        migrations.AddField(
            model_name='ctimage',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to='api.patient'),
        ),
    ]
